Fermi_Data <- read_excel("Fermi-Data.xlsx")
data = data.frame(Fermi_Data)
options(scipen = 999)
# First, let's create the error columns for each person
people <- c("Timothy", "Markus", "Marvin", "Adrian")
types <- c("Answer", "average_Answer")
for (person in people) {
for (type in types) {
col_name <- paste0(person, ".", type)
error_col_name <- paste0(person, "_error_", type)
# Create a new column filled with NA
data[[error_col_name]] <- NA
# Calculate error for each row
for (i in 1:nrow(data)) {
data[i, error_col_name] <- calc_error(data$Correct.answers[i], data[[col_name]][i])
}
}
}
library(readxl)
Fermi_Data <- read_excel("Fermi-Data.xlsx")
data = data.frame(Fermi_Data)
options(scipen = 999)
# First, let's create the error columns for each person
people <- c("Timothy", "Markus", "Marvin", "Adrian")
types <- c("Answer", "s.guess")
for (person in people) {
for (type in types) {
col_name <- paste0(person, ".", type)
error_col_name <- paste0(person, "_error_", type)
# Create a new column filled with NA
data[[error_col_name]] <- NA
# Calculate error for each row
for (i in 1:nrow(data)) {
data[i, error_col_name] <- calc_error(data$Correct.answers[i], data[[col_name]][i])
}
}
}
calc_error <- function(actual, forecast) {
abs(log10(max(1,actual)) - log10(max(1,forecast)))
}
library(readxl)
Fermi_Data <- read_excel("Fermi-Data.xlsx")
data = data.frame(Fermi_Data)
options(scipen = 999)
# First, let's create the error columns for each person
people <- c("Timothy", "Markus", "Marvin", "Adrian")
types <- c("Answer", "s.guess")
for (person in people) {
for (type in types) {
col_name <- paste0(person, ".", type)
error_col_name <- paste0(person, "_error_", type)
# Create a new column filled with NA
data[[error_col_name]] <- NA
# Calculate error for each row
for (i in 1:nrow(data)) {
data[i, error_col_name] <- calc_error(data$Correct.answers[i], data[[col_name]][i])
}
}
}
# Now, let's create a new dataframe with the summed errors
summed_errors <- data.frame(
Timothy_Answer = sum(data$Timothy_error_Answer, na.rm = TRUE),
Timothy_average = sum(data$Timothy_error_s.guess, na.rm = TRUE),
Markus_Answer = sum(data$Markus_error_Answer, na.rm = TRUE),
Markus_average = sum(data$Markus_error_s.guess, na.rm = TRUE),
Marvin_Answer = sum(data$Marvin_error_Answer, na.rm = TRUE),
Marvin_average = sum(data$Marvin_error_s.guess, na.rm = TRUE),
Adrian_Answer = sum(data$Adrian_error_Answer, na.rm = TRUE),
Adrian_average = sum(data$Adrian_error_s.guess, na.rm = TRUE)
)
View(summed_errors)
normalize_errors <- function(data) {
# List of error column names
error_cols <- c(
"Timothy_error_Answer", "Timothy_error_s.guess",
"Markus_error_Answer", "Markus_error_s.guess",
"Marvin_error_Answer", "Marvin_error_s.guess",
"Adrian_error_Answer", "Adrian_error_s.guess"
)
# Create new normalized column names
norm_cols <- paste0("norm_", error_cols)
# Initialize new columns with NA
for (col in norm_cols) {
data[[col]] <- NA
}
# Normalize errors for each row
for (i in 1:nrow(data)) {
row_errors <- as.numeric(data[i, error_cols])
row_sum <- sum(row_errors, na.rm = TRUE)
if (row_sum > 0) {
normalized_errors <- row_errors / row_sum
} else {
normalized_errors <- rep(0, length(error_cols))
}
data[i, norm_cols] <- normalized_errors
}
return(data)
}
# Apply the function to your dataframe
data <- normalize_errors(data)
# Now, let's create a new dataframe with the summed errors
summed_errors <- data.frame(
Timothy_Answer = sum(data$Timothy_error_Answer, na.rm = TRUE),
Timothy_average = sum(data$Timothy_error_s.guess, na.rm = TRUE),
Markus_Answer = sum(data$Markus_error_Answer, na.rm = TRUE),
Markus_average = sum(data$Markus_error_s.guess, na.rm = TRUE),
Marvin_Answer = sum(data$Marvin_error_Answer, na.rm = TRUE),
Marvin_average = sum(data$Marvin_error_s.guess, na.rm = TRUE),
Adrian_Answer = sum(data$Adrian_error_Answer, na.rm = TRUE),
Adrian_average = sum(data$Adrian_error_s.guess, na.rm = TRUE)
)
# Now, let's create a new dataframe with the summed errors
summed_errors <- data.frame(
Timothy_Answer = sum(data$norm_Timothy_error_Answer, na.rm = TRUE),
Timothy_average = sum(data$norm_Timothy_error_s.guess, na.rm = TRUE),
Markus_Answer = sum(data$norm_Markus_error_Answer, na.rm = TRUE),
Markus_average = sum(data$norm_Markus_error_s.guess, na.rm = TRUE),
Marvin_Answer = sum(data$norm_Marvin_error_Answer, na.rm = TRUE),
Marvin_average = sum(data$norm_Marvin_error_s.guess, na.rm = TRUE),
Adrian_Answer = sum(data$norm_Adrian_error_Answer, na.rm = TRUE),
Adrian_average = sum(data$norm_Adrian_error_s.guess, na.rm = TRUE)
)
summed_errors[1]
summed_errors[1,3]
summed_errors[1,1]
human_total_error = summed_errors[1,1] + summed_errors[1,3] + summed_errors[1,5] + summed_errors[1,7]
average_total_error = summed_errors[1,2] + summed_errors[1,4] + summed_errors[1,6] + summed_errors[1,8]
print(human_total_error, average_total_error)
human_total_error = summed_errors[1,1] + summed_errors[1,3] + summed_errors[1,5] + summed_errors[1,7]
average_total_error = summed_errors[1,2] + summed_errors[1,4] + summed_errors[1,6] + summed_errors[1,8]
print(human_total_error)
print(average_total_error)
human_total_error + average_total_error
human_total_error = summed_errors[1,1] + summed_errors[1,3] + summed_errors[1,5] + summed_errors[1,7]
average_total_error = summed_errors[1,2] + summed_errors[1,4] + summed_errors[1,6] + summed_errors[1,8]
print(human_total_error/10)
print(average_total_error/10)
summed_errors = summed_errors * 0.1
summed_errors <- data.frame(
Timothy_Answer = sum(data$norm_Timothy_error_Answer, na.rm = TRUE),
Timothy_average = sum(data$norm_Timothy_error_s.guess, na.rm = TRUE),
Markus_Answer = sum(data$norm_Markus_error_Answer, na.rm = TRUE),
Markus_average = sum(data$norm_Markus_error_s.guess, na.rm = TRUE),
Marvin_Answer = sum(data$norm_Marvin_error_Answer, na.rm = TRUE),
Marvin_average = sum(data$norm_Marvin_error_s.guess, na.rm = TRUE),
Adrian_Answer = sum(data$norm_Adrian_error_Answer, na.rm = TRUE),
Adrian_average = sum(data$norm_Adrian_error_s.guess, na.rm = TRUE)
)
summed_errors = summed_errors * 0.1
# Calculate mean forecast and mean guess
data$mean_forecast <- rowMeans(data[, c("Timothy.Answer", "Markus.Answer", "Marvin.Answer", "Adrian.Answer")], na.rm = TRUE)
data$mean_guess <- rowMeans(data[, c("Timothy.s.guess", "Markus.s.guess", "Marvin.s.guess", "Adrian.s.guess")], na.rm = TRUE)
# Calculate errors for mean forecast and mean guess
data$mean_forecast_error <- sapply(1:nrow(data), function(i) calc_error(data$Correct.answers[i], data$mean_forecast[i]))
data$mean_guess_error <- sapply(1:nrow(data), function(i) calc_error(data$Correct.answers[i], data$mean_guess[i]))
# Normalize these new errors
data$norm_mean_forecast_error <- NA
data$norm_mean_guess_error <- NA
for (i in 1:nrow(data)) {
all_errors <- c(data[i, grep("_error_", names(data))],
data$mean_forecast_error[i],
data$mean_guess_error[i])
total_error <- sum(all_errors, na.rm = TRUE)
if (total_error > 0) {
data$norm_mean_forecast_error[i] <- data$mean_forecast_error[i] / total_error
data$norm_mean_guess_error[i] <- data$mean_guess_error[i] / total_error
} else {
data$norm_mean_forecast_error[i] <- 0
data$norm_mean_guess_error[i] <- 0
}
}
library(readxl)
Fermi_Data <- read_excel("Fermi-Data.xlsx")
data = data.frame(Fermi_Data)
options(scipen = 999)
# Calculate mean forecast and mean guess
data$mean_forecast <- rowMeans(data[, c("Timothy.Answer", "Markus.Answer", "Marvin.Answer", "Adrian.Answer")], na.rm = TRUE)
data$mean_guess <- rowMeans(data[, c("Timothy.s.guess", "Markus.s.guess", "Marvin.s.guess", "Adrian.s.guess")], na.rm = TRUE)
col_name <- paste0(mean_forecast)
# First, let's create the error columns for each person
people <- c("Timothy", "Markus", "Marvin", "Adrian")
types <- c("Answer", "s.guess")
for (person in people) {
for (type in types) {
col_name <- paste0(person, ".", type)
error_col_name <- paste0(person, "_error_", type)
# Create a new column filled with NA
data[[error_col_name]] <- NA
# Calculate error for each row
for (i in 1:nrow(data)) {
data[i, error_col_name] <- calc_error(data$Correct.answers[i], data[[col_name]][i])
}
}
}
col_name <- paste0(mean_guess)
library(readxl)
Fermi_Data <- read_excel("Fermi-Data.xlsx")
data = data.frame(Fermi_Data)
options(scipen = 999)
calc_error <- function(actual, forecast) {
abs(log10(max(1,actual)) - log10(max(1,forecast)))
}
# Calculate mean forecast and mean guess
data$Mean.Answer <- rowMeans(data[, c("Timothy.Answer", "Markus.Answer", "Marvin.Answer", "Adrian.Answer")], na.rm = TRUE)
data$Mean.s.guess <- rowMeans(data[, c("Timothy.s.guess", "Markus.s.guess", "Marvin.s.guess", "Adrian.s.guess")], na.rm = TRUE)
# First, let's create the error columns for each person
people <- c("Timothy", "Markus", "Marvin", "Adrian","Mean")
types <- c("Answer", "s.guess")
for (person in people) {
for (type in types) {
col_name <- paste0(person, ".", type)
error_col_name <- paste0(person, "_error_", type)
# Create a new column filled with NA
data[[error_col_name]] <- NA
# Calculate error for each row
for (i in 1:nrow(data)) {
data[i, error_col_name] <- calc_error(data$Correct.answers[i], data[[col_name]][i])
}
}
}
normalize_errors <- function(data) {
# List of error column names
error_cols <- c(
"Timothy_error_Answer", "Timothy_error_s.guess",
"Markus_error_Answer", "Markus_error_s.guess",
"Marvin_error_Answer", "Marvin_error_s.guess",
"Adrian_error_Answer", "Adrian_error_s.guess",
"Mean_error_Answer", "Mean_error_s.guess"
)
# Create new normalized column names
norm_cols <- paste0("norm_", error_cols)
# Initialize new columns with NA
for (col in norm_cols) {
data[[col]] <- NA
}
# Normalize errors for each row
for (i in 1:nrow(data)) {
row_errors <- as.numeric(data[i, error_cols])
row_sum <- sum(row_errors, na.rm = TRUE)
if (row_sum > 0) {
normalized_errors <- row_errors / row_sum
} else {
normalized_errors <- rep(0, length(error_cols))
}
data[i, norm_cols] <- normalized_errors
}
return(data)
}
# Apply the function to your dataframe
data <- normalize_errors(data)
summed_errors <- data.frame(
Timothy_Answer = sum(data$norm_Timothy_error_Answer, na.rm = TRUE),
Timothy_average = sum(data$norm_Timothy_error_s.guess, na.rm = TRUE),
Markus_Answer = sum(data$norm_Markus_error_Answer, na.rm = TRUE),
Markus_average = sum(data$norm_Markus_error_s.guess, na.rm = TRUE),
Marvin_Answer = sum(data$norm_Marvin_error_Answer, na.rm = TRUE),
Marvin_average = sum(data$norm_Marvin_error_s.guess, na.rm = TRUE),
Adrian_Answer = sum(data$norm_Adrian_error_Answer, na.rm = TRUE),
Adrian_average = sum(data$norm_Adrian_error_s.guess, na.rm = TRUE),
Mean_Answer = sum(data$norm_Mean_error_Answer, na.rm = TRUE),
Mean_average = sum(data$norm_Mean_error_s.guess, na.rm = TRUE)
)
summed_errors = summed_errors * 0.1
View(summed_errors)
library(tidyverse)
library(readxl)
Fermi_Data <- read_excel("Fermi-Data.xlsx")
data = data.frame(Fermi_Data)
options(scipen = 999)
library(readxl)
Fermi_Data_Original <- read_excel("Fermi-Data.xlsx")
my_data = data.frame(Fermi_Data_Original)
options(scipen = 999)
my_data %>%
rename(
Answers = Correct.answers,
)
View(my_data)
my_data %>%
rename(
Answers = Correct.answers,
)
View(my_data)
my_data %>%
rename(
Answers = Correct.answers,
Timothy = Timothy.Answer
)
data
my_data
my_data
my_data %>%
rename(
Answers = Correct.answers,
Timothy = Timothy.Answer
)
my_data %>%
rename(
Correct.answers = aaa,
Timothy = Timothy.Answer
)
my_data %>%
rename(
test = Correct.answers,
Timothy = Timothy.Answer
)
my_data
library(tidyverse)
library(tidyverse)
library(readxl)
Fermi_Data_Original <- read_excel("Fermi-Data.xlsx")
my_data = data.frame(Fermi_Data_Original)
options(scipen = 999)
my_data
my_data %>%
rename(
test = Correct.answers,
Timothy = Timothy.Answer
)
my_data
my_data %>%
rename(
test = Correct.answers,
Timothy = Timothy.Answer
)
my_data %>%
rename(
test = Correct.answers,
Timothy = Timothy.Answer
)
my_data
my_data = my_data %>%
rename(
test = Correct.answers,
Timothy = Timothy.Answer
)
my_data
my_data = my_data %>%
rename(
Answers = Correct.answers,
Timothy_esti = Timothy.Answer,
)
library(readxl)
Fermi_Data_Original <- read_excel("Fermi-Data.xlsx")
my_data = data.frame(Fermi_Data_Original)
options(scipen = 999)
my_data = my_data %>%
rename(
Answers = Correct.answers,
Timothy_esti = Timothy.Answer,
)
my_data
library(readxl)
Fermi_Data_Original <- read_excel("Fermi-Data.xlsx")
my_data = data.frame(Fermi_Data_Original)
options(scipen = 999)
my_data = my_data %>%
rename(
Answers = Correct.answers,
Timoth_estim = Timothy.Answer,
Timoth_avera = Timothy.s.guess,
Markus_estim = Markus.Answer,
Markus_avera = Markus.s.guess,
Marvin_estim = Marvin.Answer,
Marvin_avera = Marvin.s.guess,
Adrian_estim = Adrian.Answer,
Adrian_avera = Adrian.s.guess,
)
calc_error <- function(actual, forecast) {
abs(log10(max(1,actual)) - log10(max(1,forecast)))
}
# Calculate mean forecast and mean guess
data$Mean_estim <- rowMeans(data[, c("Timoth_estim", "Markus_estim", "Marvin_estim", "Adrian_estim")], na.rm = TRUE)
my_data = my_data %>%
rename(
Answers = Correct.answers,
Timoth_estim = Timothy.Answer,
Timoth_avera = Timothy.s.guess,
Markus_estim = Markus.Answer,
Markus_avera = Markus.s.guess,
Marvin_estim = Marvin.Answer,
Marvin_avera = Marvin.s.guess,
Adrian_estim = Adrian.Answer,
Adrian_avera = Adrian.s.guess,
)
library(readxl)
Fermi_Data_Original <- read_excel("Fermi-Data.xlsx")
my_data = data.frame(Fermi_Data_Original)
options(scipen = 999)
my_data = my_data %>%
rename(
Answers = Correct.answers,
Timoth_estim = Timothy.Answer,
Timoth_avera = Timothy.s.guess,
Markus_estim = Markus.Answer,
Markus_avera = Markus.s.guess,
Marvin_estim = Marvin.Answer,
Marvin_avera = Marvin.s.guess,
Adrian_estim = Adrian.Answer,
Adrian_avera = Adrian.s.guess,
)
calc_error <- function(actual, forecast) {
abs(log10(max(1,actual)) - log10(max(1,forecast)))
}
# Calculate mean forecast and mean guess
data$Mean_estim <- rowMeans(data[, c("Timoth_estim", "Markus_estim", "Marvin_estim", "Adrian_estim")], na.rm = TRUE)
data[1, "Timoth_estim"]
data[1, 1]
# Calculate mean forecast and mean guess
my_data$Mean_estim <- rowMeans(data[, c("Timoth_estim", "Markus_estim", "Marvin_estim", "Adrian_estim")], na.rm = TRUE)
# Calculate mean forecast and mean guess
my_data$Mean_estim <- rowMeans(data[, c("Timoth_estim", "Markus_estim", "Marvin_estim", "Adrian_estim")], na.rm = TRUE)
# Calculate mean forecast and mean guess
my_data$Mean_estim <- rowMeans(my_data[, c("Timoth_estim", "Markus_estim", "Marvin_estim", "Adrian_estim")], na.rm = TRUE)
my_data$Mean_avera <- rowMeans(my_data[, c("Timoth_avera", "Markus_avera", "Marvin_avera", "Adrian_avera")], na.rm = TRUE)
# First, let's create the error columns for each person
people <- c("Timoth", "Markus", "Marvin", "Adrian","Mean")
types <- c("_estim", "_avera")
for (person in people) {
for (type in types) {
col_name <- paste0(person, type)
error_col_name <- paste0(person,type, "_error")
# Create a new column filled with NA
my_data[[error_col_name]] <- NA
# Calculate error for each row
for (i in 1:nrow(my_data)) {
my_data[i, error_col_name] <- calc_error(my_data$Correct_estims[i], my_data[[col_name]][i])
}
}
}
norm_cols <- paste0("norm_", error_col_name)
# Initialize new columns with NA
for (col in norm_cols) {
my_data[[col]] <- NA
}
# List of error column names
error_cols <- c(
"Timothy_error_Answer", "Timothy_error_s.guess",
"Markus_error_Answer", "Markus_error_s.guess",
"Marvin_error_Answer", "Marvin_error_s.guess",
"Adrian_error_Answer", "Adrian_error_s.guess",
"Mean_error_Answer", "Mean_error_s.guess"
)
# Create new normalized column names
norm_cols <- paste0("norm_", error_cols)
# Initialize new columns with NA
for (col in norm_cols) {
my_data[[col]] <- NA
}
# First, let's create the error columns for each person
people <- c("Timoth", "Markus", "Marvin", "Adrian","Mean")
types <- c("_estim", "_avera")
for (person in people) {
for (type in types) {
col_name <- paste0(person, type)
error_col_name <- paste0(person,type, "_error")
# Create a new column filled with NA
my_data[[error_col_name]] <- NA
# Calculate error for each row
for (i in 1:nrow(my_data)) {
my_data[i, error_col_name] <- calc_error(my_data$Correct_estims[i], my_data[[col_name]][i])
}
}
}
norm_cols <- paste0("norm_", error_col_name)
# Create new normalized column names
norm_cols <- paste0("norm_", error_cols)
# Initialize new columns with NA
for (col in norm_cols) {
my_data[[col]] <- NA
}
# Normalize errors for each row
for (i in 1:nrow(my_data)) {
row_errors <- as.numeric(my_data[i, error_cols])
row_sum <- sum(row_errors, na.rm = TRUE)
if (row_sum > 0) {
normalized_errors <- row_errors / row_sum
} else {
normalized_errors <- rep(0, length(error_cols))
}
my_data[i, norm_cols] <- normalized_errors
}
# List of error column names
error_cols <- c(
"Timoth_estim_error", "Timoth_avera_error",
"Markus_estim_error", "Markus_avera_error",
"Marvin_estim_error", "Marvin_avera_error",
"Adrian_estim_error", "Adrian_avera_error",
"Mean_estim_error", "Mean_avera_error"
)
# Create new normalized column names
norm_cols <- paste0("norm_", error_cols)
# Initialize new columns with NA
for (col in norm_cols) {
data[[col]] <- NA
}
# First, let's create the error columns for each person
people <- c("Timoth", "Markus", "Marvin", "Adrian","Mean")
types <- c("_estim", "_avera")
for (person in people) {
for (type in types) {
col_name <- paste0(person, type)
error_col_name <- paste0(person,type, "_error")
# Create a new column filled with NA
my_data[[error_col_name]] <- NA
# Calculate error for each row
for (i in 1:nrow(my_data)) {
my_data[i, error_col_name] <- calc_error(my_data$Correct_estims[i], my_data[[col_name]][i])
}
}
}
View(my_data)
