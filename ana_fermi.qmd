---
title: "exploring_estimates"
format: html
editor: visual
---

```{r}
library(tidyverse)

```

```{r}
library(readxl)
Fermi_Data_Original <- read_excel("Fermi-Data.xlsx")
my_data = data.frame(Fermi_Data_Original)

options(scipen = 999)
```

```{r}
my_data = my_data %>%
  rename(
    Answers = Correct.answers,
    Timoth_estim = Timothy.Answer,
    Timoth_avera = Timothy.s.guess,
    Markus_estim = Markus.Answer,
    Markus_avera = Markus.s.guess,
    Marvin_estim = Marvin.Answer,
    Marvin_avera = Marvin.s.guess,
    Adrian_estim = Adrian.Answer,
    Adrian_avera = Adrian.s.guess,
    )
```

Function to calculate log/exp error

```{r}
calc_error <- function(actual, forecast) {
  abs(log10(max(1,actual)) - log10(max(1,forecast)))
  }
```

Create columns for means

```{r}

# Calculate mean forecast and mean guess
my_data$Mean_estim <- rowMeans(my_data[, c("Timoth_estim", "Markus_estim", "Marvin_estim", "Adrian_estim")], na.rm = TRUE)
my_data$Mean_avera <- rowMeans(my_data[, c("Timoth_avera", "Markus_avera", "Marvin_avera", "Adrian_avera")], na.rm = TRUE)
```

Create columns with errors

```{r}
# First, let's create the error columns for each person
people <- c("Timoth", "Markus", "Marvin", "Adrian","Mean")
types <- c("_estim", "_avera")

for (person in people) {
  for (type in types) {
    col_name <- paste0(person, type)
    error_col_name <- paste0(person,type, "_error")

    # Create a new column filled with NA
    my_data[[error_col_name]] <- NA

    # Calculate error for each row
    for (i in 1:nrow(my_data)) {
      my_data[i, error_col_name] <- calc_error(my_data$Correct_estims[i], my_data[[col_name]][i])
    }
  }
}
```

Create column with normalized errors

```{r}


# List of error column names
error_cols <- c(
    "Timoth_estim_error", "Timoth_avera_error",
    "Markus_estim_error", "Markus_avera_error",
    "Marvin_estim_error", "Marvin_avera_error",
    "Adrian_estim_error", "Adrian_avera_error",
    "Mean_estim_error", "Mean_avera_error"
)

# Create new normalized column names
norm_cols <- paste0("norm_", error_cols)

# Initialize new columns with NA
for (col in norm_cols) {
    data[[col]] <- NA
  }

  # Normalize errors for each row
for (i in 1:nrow(my_data)) {
  row_errors <- as.numeric(my_data[i, error_cols])
  row_sum <- sum(row_errors, na.rm = TRUE)

  if (row_sum > 0) {
      normalized_errors <- row_errors / row_sum
    } else {
      normalized_errors <- rep(0, length(error_cols))
    }

  my_data[i, norm_cols] <- normalized_errors
}
```

New dataframe with the summed normed_errors

```{r}

summed_errors <- data.frame(
  Timothy_Answer = sum(data$norm_Timothy_error_Answer, na.rm = TRUE),
  Timothy_average = sum(data$norm_Timothy_error_s.guess, na.rm = TRUE),
  Markus_Answer = sum(data$norm_Markus_error_Answer, na.rm = TRUE),
  Markus_average = sum(data$norm_Markus_error_s.guess, na.rm = TRUE),
  Marvin_Answer = sum(data$norm_Marvin_error_Answer, na.rm = TRUE),
  Marvin_average = sum(data$norm_Marvin_error_s.guess, na.rm = TRUE),
  Adrian_Answer = sum(data$norm_Adrian_error_Answer, na.rm = TRUE),
  Adrian_average = sum(data$norm_Adrian_error_s.guess, na.rm = TRUE),
  Mean_Answer = sum(data$norm_Mean_error_Answer, na.rm = TRUE),
  Mean_average = sum(data$norm_Mean_error_s.guess, na.rm = TRUE)


)

summed_errors = summed_errors * 0.1

```

Performance of estimates vs averages

```{r}

human_total_error = summed_errors[1,1] + summed_errors[1,3] + summed_errors[1,5] + summed_errors[1,7]
average_total_error = summed_errors[1,2] + summed_errors[1,4] + summed_errors[1,6] + summed_errors[1,8]


print(human_total_error/10)
print(average_total_error/10)



```

```{r}




# Calculate errors for mean forecast and mean guess
data$mean_forecast_error <- sapply(1:nrow(data), function(i) calc_error(data$Correct_estims[i], data$mean_forecast[i]))
data$mean_guess_error <- sapply(1:nrow(data), function(i) calc_error(data$Correct_estims[i], data$mean_guess[i]))

# Normalize these new errors
data$norm_mean_forecast_error <- NA
data$norm_mean_guess_error <- NA

for (i in 1:nrow(data)) {
  all_errors <- c(data[i, grep("_error_", names(data))],
                  data$mean_forecast_error[i],
                  data$mean_guess_error[i])
  total_error <- sum(all_errors, na.rm = TRUE)

  if (total_error > 0) {
    data$norm_mean_forecast_error[i] <- data$mean_forecast_error[i] / total_error
    data$norm_mean_guess_error[i] <- data$mean_guess_error[i] / total_error
  } else {
    data$norm_mean_forecast_error[i] <- 0
    data$norm_mean_guess_error[i] <- 0
  }
}

# Add to summed_errors dataframe
summed_errors$mean_forecast <- sum(data$norm_mean_forecast_error, na.rm = TRUE) * 0.1
summed_errors$mean_guess <- sum(data$norm_mean_guess_error, na.rm = TRUE) * 0.1

# Print results
cat("Total error for mean forecast:", summed_errors$mean_forecast, "\n")
cat("Total error for mean guess:", summed_errors$mean_guess, "\n")


```
