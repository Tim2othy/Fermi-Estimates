---
title: "exploring_estimateates"
format: html
editor: visual
---


Loading libraries

```{r}
library(tidyverse)
library(readxl)
```

Loading data, adjusted visual settings

```{r}
Fermi_Data_Original <- read_excel("Fermi-Data.xlsx")
fermi_data <- data.frame(Fermi_Data_Original)

options(scipen = 999)
```

Renaming collumns

```{r}
fermi_data <- fermi_data %>%
    rename(
        Answers = Correct.answers,
        Timothy_estimate = Timothy.Answer,
        Timothy_average = Timothy.s.guess,
        Markus_estimate = Markus.Answer,
        Markus_average = Markus.s.guess,
        Marvin_estimate = Marvin.Answer,
        Marvin_average = Marvin.s.guess,
        Adrian_estimate = Adrian.Answer,
        Adrian_average = Adrian.s.guess,
    )
```

Function to calculate OOM error

```{r}
calc_error <- function(actual, forecast) {
    abs(log10(max(0.01, actual)) - log10(max(0.01, forecast)))
}
```

Add columns for the two mean values

```{r}
fermi_data$Mean_of_estimates <- rowMeans(fermi_data[, c(2, 4, 6, 8)], na.rm = TRUE)
fermi_data$Mean_of_averages <- rowMeans(fermi_data[, c(3, 5, 7, 9)], na.rm = TRUE)
```

create results dataframe, where the errors will be stored

```{r}
people <- c("Timothy", "Markus", "Marvin", "Adrian", "Mean")
types <- c("_estimate", "_average")

results <- data.frame(matrix(ncol = 10, nrow = 10))
names(results) <- paste0(rep(people, each = 2), rep(types, times = 5), "_error")
```

calculate the errors and store them in results

```{r}
for (i in 1:10) {
    for (j in 1:10) {
        results[i, j] <- calc_error(fermi_data$Answers[i], fermi_data[i, j + 2])
    }
}
```

create new normalized results dataframe

```{r}
people <- c("Timothy", "Markus", "Marvin", "Adrian", "Mean")
types <- c("_estimate", "_average")

norm_results <- data.frame(matrix(ncol = 10, nrow = 10))
names(norm_results) <- paste0(rep(people, each = 2), rep(types, times = 5), "_error_normalized")
```

calculate the normalized errors and store them in norm_results

```{r}
for (i in 1:10) {
    sum_row_estimates <- sum(results[i, c(1, 3, 5, 7)], na.rm = TRUE)
    sum_row_averages <- sum(results[i, c(2, 4, 6, 8)], na.rm = TRUE)
    for (j in c(1, 3, 5, 7, 9)) {
        norm_results[i, j] <- results[i, j] / sum_row_estimates
    }
    for (j in c(2, 4, 6, 8, 10)) {
        norm_results[i, j] <- results[i, j] / sum_row_averages
    }
}
```

Add collumn to the left of norm_results with description of each row

```{r}
# Add empty column to left of results
new_col <- rep(NA, nrow(norm_results))
norm_results <- cbind(new_col, norm_results)
names(norm_results)[1] <- "Row_description"
norm_results$Row_description <- fermi_data$Question
```


add row to results and norm_results with column sums
```{r}
# Add a new row with column sums
for (j in 2:11) {
    results[11, j] <- sum(results[1:10, j])
    norm_results[11, j] <- sum(norm_results[1:10, j])
}

norm_results[11, 1] <- "Total normalized error"
results[11, 1] <- "Total normalized error"
```
